# Generated by Django 4.0.4 on 2022-08-01 22:24

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bordereaux',
            fields=[
                ('bordereaux_id', models.IntegerField(db_column='BORDEREAUX_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'bordereaux',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bureaux',
            fields=[
                ('bureaux_id', models.AutoField(db_column='BUREAUX_id', primary_key=True, serialize=False)),
                ('bureaux_code', models.IntegerField(db_column='BUREAUX_code', unique=True)),
                ('bureaux_libelle', models.CharField(blank=True, db_column='BUREAUX_libelle', max_length=45, null=True)),
            ],
            options={
                'db_table': 'bureaux',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('commande_id', models.AutoField(db_column='COMMANDE_id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'commande',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Demande',
            fields=[
                ('demande_id', models.AutoField(db_column='DEMANDE_id', primary_key=True, serialize=False)),
                ('demande_date', models.DateField(auto_now_add=True, db_column='DEMANDE_date', null=True)),
                ('demande_lien', models.FileField(blank=True, db_column='DEMANDE_lien', max_length=50, null=True, upload_to='Demandes')),
            ],
            options={
                'db_table': 'demande',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('division_id', models.AutoField(db_column='DIVISION_id', primary_key=True, serialize=False)),
                ('division_code', models.IntegerField(blank=True, db_column='DIVISION_code', null=True, unique=True)),
                ('division_libelle', models.CharField(blank=True, db_column='DIVISION_libelle', max_length=45, null=True)),
            ],
            options={
                'db_table': 'division',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Equipement',
            fields=[
                ('equipement_id', models.IntegerField(db_column='EQUIPEMENT_id', primary_key=True, serialize=False)),
                ('equipement_libelle', models.CharField(blank=True, db_column='EQUIPEMENT_libelle', max_length=45, null=True)),
                ('equipement_categorie', models.CharField(blank=True, db_column='EQUIPEMENT_categorie', max_length=45, null=True)),
                ('equipement_caracteristique', models.TextField(blank=True, db_column='EQUIPEMENT_caracteristique', null=True)),
            ],
            options={
                'db_table': 'equipement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fonction',
            fields=[
                ('fonction_id', models.AutoField(db_column='FONCTION_id', primary_key=True, serialize=False)),
                ('fonction_libelle', models.CharField(blank=True, db_column='FONCTION_libelle', max_length=45, null=True)),
            ],
            options={
                'db_table': 'fonction',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('fournisseur_id', models.AutoField(db_column='FOURNISSEUR_id', primary_key=True, serialize=False)),
                ('fournisseur_nom', models.CharField(blank=True, db_column='FOURNISSEUR_nom', max_length=45, null=True)),
                ('fournisseur_prenom', models.CharField(blank=True, db_column='FOURNISSEUR_prenom', max_length=45, null=True)),
                ('fournisseur_adresse', models.CharField(blank=True, db_column='FOURNISSEUR_adresse', max_length=45, null=True)),
                ('fournisseur_telefone', models.CharField(blank=True, db_column='FOURNISSEUR_telefone', max_length=45, null=True)),
            ],
            options={
                'db_table': 'fournisseur',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaterielDote',
            fields=[
                ('materiel_dote_id', models.AutoField(db_column='MATERIEL_DOTE_id', primary_key=True, serialize=False)),
                ('materiel_dote_numero', models.CharField(db_column='MATERIEL_DOTE_numero', max_length=45, unique=True)),
                ('materiel_dote_libelle', models.CharField(blank=True, db_column='MATERIEL_DOTE_libelle', max_length=45, null=True)),
                ('materiel_dote_categorie', models.CharField(blank=True, db_column='MATERIEL_DOTE_categorie', max_length=45, null=True)),
                ('materiel_dote_caracteristique', models.TextField(blank=True, db_column='MATERIEL_DOTE_caracteristique', null=True)),
                ('materiel_dote_dureevie', models.IntegerField(blank=True, db_column='MATERIEL_DOTE_DureeVie', null=True)),
                ('materiel_dote_taux', models.CharField(blank=True, db_column='MATERIEL_DOTE_Taux', max_length=45, null=True)),
                ('materiel_dote_status', models.IntegerField(blank=True, db_column='MATERIEL_DOTE_status', null=True)),
            ],
            options={
                'db_table': 'materiel_dote',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Personel',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('personel_id', models.AutoField(db_column='PERSONEL_id', primary_key=True, serialize=False)),
                ('personel_nom', models.CharField(blank=True, db_column='PERSONEL_nom', max_length=45, null=True)),
                ('personel_prenom', models.CharField(blank=True, db_column='PERSONEL_prenom', max_length=75, null=True)),
                ('personel_matricule', models.CharField(db_column='PERSONEL_Matricule', max_length=45, unique=True)),
                ('personel_telefone', models.CharField(blank=True, db_column='PERSONEL_telefone', max_length=45, null=True)),
                ('personel_grade', models.CharField(blank=True, db_column='PERSONEL_grade', max_length=45, null=True)),
            ],
            options={
                'db_table': 'personel',
                'managed': True,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_id', models.AutoField(db_column='SECTION_id', primary_key=True, serialize=False)),
                ('section_code', models.IntegerField(db_column='SECTION_code', unique=True)),
                ('section_libelle', models.CharField(blank=True, db_column='SECTION_libelle', max_length=45, null=True)),
                ('division_division', models.ForeignKey(db_column='DIVISION_DIVISION_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.division')),
            ],
            options={
                'db_table': 'section',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaterielDemande',
            fields=[
                ('materiel_demande_id', models.AutoField(db_column='MATERIEL_DEMANDE_id', primary_key=True, serialize=False)),
                ('materiel_demande_libelle', models.CharField(blank=True, db_column='MATERIEL_DEMANDE_libelle', max_length=100, null=True)),
                ('demande_demande', models.ForeignKey(db_column='DEMANDE_DEMANDE_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.demande')),
                ('equipement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.equipement')),
            ],
            options={
                'db_table': 'materiel_demande',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LigneCommande',
            fields=[
                ('ligne_commande_id', models.AutoField(db_column='LIGNE_COMMANDE_id', primary_key=True, serialize=False)),
                ('ligne_commande_qte', models.IntegerField(blank=True, db_column='LIGNE_COMMANDE_qte', null=True)),
                ('ligne_commande_prix_unitaire', models.IntegerField(blank=True, db_column='LIGNE_COMMANDE_prix_unitaire', null=True)),
                ('commande_commande', models.ForeignKey(db_column='COMMANDE_COMMANDE_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.commande')),
                ('equipement_equipement', models.ForeignKey(db_column='EQUIPEMENT_EQUIPEMENT_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.equipement')),
            ],
            options={
                'db_table': 'ligne_commande',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('facture_id', models.AutoField(db_column='FACTURE_id', primary_key=True, serialize=False)),
                ('facture_copie', models.CharField(blank=True, db_column='FACTURE_copie', max_length=50, null=True)),
                ('bordereaux_bordereaux', models.ForeignKey(db_column='BORDEREAUX_BORDEREAUX_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.bordereaux')),
            ],
            options={
                'db_table': 'facture',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Depense',
            fields=[
                ('depense_id', models.IntegerField(db_column='DEPENSE_id', primary_key=True, serialize=False)),
                ('depense_libelle', models.CharField(blank=True, db_column='DEPENSE_libelle', max_length=45, null=True)),
                ('depense_montant', models.IntegerField(blank=True, db_column='DEPENSE_montant', null=True)),
                ('depense_date', models.DateField(auto_now_add=True, db_column='Depense_date', null=True)),
                ('bureaux_bureaux', models.ForeignKey(db_column='BUREAUX_BUREAUX_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.bureaux')),
            ],
            options={
                'db_table': 'depense',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='demande',
            name='demande_personel',
            field=models.ForeignKey(db_column='DEMANDE_PERSONEL_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='expediteur', to='App.personel'),
        ),
        migrations.AddField(
            model_name='demande',
            name='demande_personel_destination',
            field=models.ForeignKey(blank=True, db_column='DEMANDE_PERSONEL_destination', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destiantion', to='App.personel'),
        ),
        migrations.AddField(
            model_name='commande',
            name='fournisseur_fournisseur',
            field=models.ForeignKey(db_column='FOURNISSEUR_FOURNISSEUR_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.fournisseur'),
        ),
        migrations.AddField(
            model_name='commande',
            name='personel_personel',
            field=models.ForeignKey(db_column='PERSONEL_PERSONEL_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.personel'),
        ),
        migrations.AddField(
            model_name='bureaux',
            name='section_section',
            field=models.ForeignKey(db_column='SECTION_SECTION_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.section'),
        ),
        migrations.AddField(
            model_name='bordereaux',
            name='commande_commande',
            field=models.ForeignKey(db_column='COMMANDE_COMMANDE_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.commande'),
        ),
        migrations.CreateModel(
            name='Appartenir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appartenir_dte', models.DateField(auto_now_add=True, db_column='APPARTENIR_dte', null=True)),
                ('appartenir_status', models.IntegerField(blank=True, db_column='APPARTENIR_status', null=True)),
                ('bureaux_bureaux', models.ForeignKey(db_column='BUREAUX_BUREAUX_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.bureaux')),
                ('materiel_dote_materiel_dote', models.ForeignKey(db_column='MATERIEL_DOTE_MATERIEL_DOTE_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.materieldote')),
            ],
            options={
                'db_table': 'appartenir',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Affecter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affecter_dte', models.DateField(auto_now_add=True, db_column='AFFECTER_dte', null=True)),
                ('bureaux_bureaux', models.ForeignKey(db_column='BUREAUX_BUREAUX_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.bureaux')),
                ('fonction_fonction', models.ForeignKey(db_column='FONCTION_FONCTION_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.fonction')),
                ('personel_personel', models.ForeignKey(db_column='PERSONEL_PERSONEL_id', on_delete=django.db.models.deletion.DO_NOTHING, to='App.personel')),
            ],
            options={
                'db_table': 'affecter',
                'managed': True,
            },
        ),
    ]
